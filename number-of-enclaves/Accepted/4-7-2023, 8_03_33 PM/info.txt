{"id":929655738,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1680878013,"status":10,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/929655738/","is_pending":"Not Pending","title":"Number of Enclaves","memory":"42.5 MB","code":"class Solution {\npublic:\n    int numEnclaves(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        \n        function<void(int, int)> dfs = [&](int i, int j) {\n            if (i < 0 || j < 0 || i >= n || j >= m || grid[i][j] == 0) {\n                return;\n            }\n            grid[i][j] = 0;\n            dfs(i+1, j);\n            dfs(i-1, j);\n            dfs(i, j+1);\n            dfs(i, j-1);\n        };\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if ((i == 0 || j == 0 || n-1 == i || m-1 == j) && grid[i][j] == 1) {\n                    dfs(i, j);\n                }\n            }\n        }\n        \n        int s = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                s += grid[i][j];\n            }\n        }\n        return s;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-enclaves","has_notes":false,"flag_type":1}