{"id":949428085,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1683963097,"status":10,"status_display":"Accepted","runtime":"286 ms","url":"/submissions/detail/949428085/","is_pending":"Not Pending","title":"Count Ways To Build Good Strings","memory":"56.9 MB","code":"class Solution {\npublic:\n    int countGoodStrings(int low, int high, int zero, int one) {\n        unordered_map<int, int> dp;\n        dp[0] = 1;\n        int mod = 1e9 + 7;\n        for (int i = 1; i <= high; i++) {\n            \n            int num_valid_strings_ending_with_zero = dp.count(i - zero) ? dp[i - zero] : 0;\n            \n            \n            int num_valid_strings_ending_with_one = dp.count(i - one) ? dp[i - one] : 0;\n            \n            \n            int num_valid_strings_of_length_i = (num_valid_strings_ending_with_zero + num_valid_strings_ending_with_one) % mod;\n            \n            \n            dp[i] = num_valid_strings_of_length_i;\n        }\n        \n        \n        int total_num_valid_strings = 0;\n        for (int i = low; i <= high; i++) {\n            total_num_valid_strings = (total_num_valid_strings + (dp.count(i) ? dp[i] : 0)) % mod;\n        }\n        return total_num_valid_strings;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"count-ways-to-build-good-strings","has_notes":false,"flag_type":1}