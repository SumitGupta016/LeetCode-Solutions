{"id":946808238,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1683570447,"status":10,"status_display":"Accepted","runtime":"369 ms","url":"/submissions/detail/946808238/","is_pending":"Not Pending","title":"Find the Longest Valid Obstacle Course at Each Position","memory":"118.7 MB","code":"class Solution {\npublic:\n    vector<int> longestObstacleCourseAtEachPosition(vector<int>& obstacles) {\n        int n = obstacles.size();\n        int length = 0;\n        vector<int> result(n);\n        vector<int> increasingSubseq(n);\n        for (int i = 0; i < n; ++i) {\n            int left = 0, right = length;\n            while (left < right) {\n                int mid = (left + right) / 2;\n                if (increasingSubseq[mid] <= obstacles[i])\n                    left = mid + 1;\n                else\n                    right = mid;\n            }\n            result[i] = left + 1;\n            if (length == left)\n                length++;\n            increasingSubseq[left] = obstacles[i];\n        }\n        return result;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-longest-valid-obstacle-course-at-each-position","has_notes":false,"flag_type":1}