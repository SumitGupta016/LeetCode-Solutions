{"id":927094636,"lang":"cpp","lang_name":"C++","time":"9 months, 1 week","timestamp":1680511300,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/927094636/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"9.6 MB","code":"class Solution {\n\npublic:\n    bool isAlienSorted(vector<string>& word, string order) {\n \n       vector<int> converter(26, 0);\n        for(int k = 0 ; k<26 ; k++)\n        converter[order[k]-'a'] = k;\n\n        int i = 1;\n\n        while(i<word.size())\n        {\n           if(converter[word[i][0]-'a']<converter[word[i-1][0]-'a'])\n           return false;\n           else if(converter[word[i][0]-'a'] == converter[word[i-1][0]-'a'])\n           {\n               int j = 1;\n\n               while(j<word[i].size() && j<word[i-1].size())\n               {\n                   if(converter[word[i][j]-'a'] == converter[word[i-1][j]-'a'])\n                   j++;\n                   else\n                   break;\n               }\n\n               if(j == word[i].size() && j != word[i-1].size())\n               return false;\n               else if(j<word[i].size() && j<word[i-1].size()) \n               {\n                   if(converter[word[i][j]-'a'] < converter[word[i-1][j]-'a'])\n                   return false;\n               }\n           }\n           i++;\n        }\n\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false,"flag_type":1}