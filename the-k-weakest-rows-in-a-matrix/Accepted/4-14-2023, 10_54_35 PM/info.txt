{"id":933745044,"lang":"cpp","lang_name":"C++","time":"8 months, 4 weeks","timestamp":1681493075,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/933745044/","is_pending":"Not Pending","title":"The K Weakest Rows in a Matrix","memory":"10.3 MB","code":"class Solution {\n    int calculateSoldierCount(vector<int>& v) {\n        int l=0; int h=v.size()-1;\n        while(l<=h) { \n            int mid=l+(h-l)/2;\n            if(v[mid]==0) {\n                h=mid-1;\n            } else {\n                l=mid+1;\n            }\n        }\n        return l;\n    }\n    \npublic:\n    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {\n     \n        priority_queue<pair<int,int>> max_heap;\n   \n        for(int i=0;i<mat.size();++i){\n            max_heap.push({calculateSoldierCount(mat[i]),i});\n            if(max_heap.size()>k){\n                max_heap.pop();\n            }\n        }\n        \n        vector<int>ans;\n        while(max_heap.size()){ \n            ans.push_back(max_heap.top().second);\n            max_heap.pop();\n        }\n\t\t\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"the-k-weakest-rows-in-a-matrix","has_notes":false,"flag_type":1}