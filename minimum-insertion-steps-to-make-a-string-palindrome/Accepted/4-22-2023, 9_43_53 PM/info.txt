{"id":937965703,"lang":"cpp","lang_name":"C++","time":"8 months, 3 weeks","timestamp":1682180033,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/937965703/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"6.7 MB","code":"class Solution {\npublic:\n    int minInsertions(string s) {\n        int n = s.length();\n        vector<int> dp(n);\n        for (int i = n - 2; i >= 0; i--) {\n            int prev = 0;\n            for (int j = i + 1; j < n; j++) {\n                int temp = dp[j];\n                if (s[i] == s[j]) {\n                    dp[j] = prev;\n                } else {\n                    dp[j] = min(dp[j], dp[j-1]) + 1;\n                }\n                prev = temp;\n            }\n        }\n        return dp[n-1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}