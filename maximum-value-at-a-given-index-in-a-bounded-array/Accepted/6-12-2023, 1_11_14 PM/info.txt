{"id":969419677,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1686555674,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/969419677/","is_pending":"Not Pending","title":"Maximum Value at a Given Index in a Bounded Array","memory":"6.1 MB","code":"class Solution {\npublic:\n    long calc(long n) //sum of numbers from [1 to n]\n    {\n        return ((n * (n + 1)) / 2);\n    }\n    //=========================================================================================\n    long getSum(int totalLen, int val)\n    {\n        long totalSum = 0;\n        int decreasingLen = val; //count of decreasing elements [val, val - 1, .., 1]\n        \n        //[val, val - 1, val - 2, ... 1, 1, 1, 1]\n        if (totalLen >= decreasingLen)\n        {\n            long currSum = calc(val);\n            int remainingSum = totalLen - decreasingLen; //all 1's\n            totalSum = currSum + remainingSum;\n        }\n        else //[val, val - 1, val - 2]\n        {\n            long lastVal = decreasingLen - totalLen;\n            totalSum = calc(val) - calc(lastVal);\n        }\n        return totalSum; \n    }\n    //===========================================================================================\n    int maxValue(int n, int index, int maxSum) \n    {\n        int low = 1, high = maxSum;\n        int leftCount = index, rightCount = n - index - 1;\n        int ans = -1;\n        while(low <= high)\n        {\n            int mid = low + (high - low) / 2;\n            //=====================================================\n            long  leftSum = getSum(leftCount, mid - 1);\n            long  rightSum = getSum(rightCount, mid - 1);\n            long  totalSum = leftSum + mid + rightSum;\n            //=======================================================\n            if (totalSum > maxSum)\n                high = mid - 1;\n            else { ans = mid; low = mid + 1; }\n        }\n        return ans; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-value-at-a-given-index-in-a-bounded-array","has_notes":false,"flag_type":1}