{"id":967853220,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1686380311,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/967853220/","is_pending":"Not Pending","title":"Maximum Value at a Given Index in a Bounded Array","memory":"N/A","code":"class Solution {\n    public: int maxValue(int n, int index, int maxSum) {\n        \n        int low = 1, mid = 0, high = 1000000000;\n        while(low <= high) {\n            mid = (low + high) / 2;\n            \n           \n            if(calcAns(mid, index, n) > maxSum) { \n                high = mid - 1;\n            } \n            \n           \n            else if(calcAns(mid + 1, index, n)  <= maxSum) {\n                low = mid + 1;\n            } \n            \n            \n            else {\n                break;\n            }\n        }\n        \n        return mid;\n    }\n    \n    public int calcAns(int max, int idx, int n) {\n        long ret = calcPart(max - 1, idx) + calcPart(max, n - idx);\n        if(ret > 1000000000) {\n            \n            return 1000000001;\n        } else {\n            \n           \n            return (int)ret;\n        }\n    }\n    public long calcPart(int a, int num) {\n        \n        \n        long an = 0, extraOnes = 0;\n        long ans = 0;\n        if(num >= a) {\n            \n        \n            an = 1;\n            extraOnes = num - a;\n        } else if(num < a) {\n            \n            \n            extraOnes = 0;\n            an = a - num + 1;\n        }\n        \n       \n        ans = ((an + a) * (a - an + 1)) / 2;\n        \n        \n        ans += extraOnes;\n        \n        return ans;\n    }\n}","compare_result":null,"title_slug":"maximum-value-at-a-given-index-in-a-bounded-array","has_notes":false,"flag_type":1}