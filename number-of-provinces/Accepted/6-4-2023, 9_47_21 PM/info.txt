{"id":963788224,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1685895441,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/963788224/","is_pending":"Not Pending","title":"Number of Provinces","memory":"13.6 MB","code":"class Solution {\npublic:\n    int findCircleNum(vector<vector<int>>& isConnected) {\n        int n = isConnected.size();\n        int provinces = 0;\n        vector<bool> visited(n, false);\n\n        for (int i = 0; i < n; i++) {\n            if (!visited[i]) {\n                provinces++;\n                dfs(isConnected, visited, i);\n            }\n        }\n\n        return provinces;\n    }\n\n    void dfs(vector<vector<int>>& isConnected, vector<bool>& visited, int node) {\n        visited[node] = true;\n        for (int neighbor = 0; neighbor < isConnected.size(); neighbor++) {\n            if (isConnected[node][neighbor] == 1 && !visited[neighbor]) {\n                dfs(isConnected, visited, neighbor);\n            }\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}