{"id":927663002,"lang":"cpp","lang_name":"C++","time":"9 months, 1 week","timestamp":1680588072,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/927663002/","is_pending":"Not Pending","title":"Optimal Partition of String","memory":"10.3 MB","code":"class Solution {\npublic:\n    int partitionString(string s) {\n        int partitions = 1;\n\n        vector<int> last_seen(26, -1);\n        \n        int new_partition_idx = 0;\n\n        for(int i = 0; i < s.size(); i++) { \n            int idx = s.at(i) - 'a';\n\n            if(last_seen[idx] >= new_partition_idx) {\n                partitions++;\n                new_partition_idx = i;\n            }\n\n            last_seen[idx] = i;\n        }\n        \n        return partitions;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"optimal-partition-of-string","has_notes":false,"flag_type":1}