{"id":936252360,"lang":"cpp","lang_name":"C++","time":"8 months, 3 weeks","timestamp":1681892793,"status":10,"status_display":"Accepted","runtime":"424 ms","url":"/submissions/detail/936252360/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"184.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int longestZigZag(TreeNode* root) {\n        vector<int> res = dfs(root);\n        return res[2];\n    }\n    \nprivate:\n    vector<int> dfs(TreeNode* node) {\n        if (node == nullptr) {\n            return {-1, -1, -1};\n        }\n        \n        vector<int> leftSubtree = dfs(node->left);\n        vector<int> rightSubtree = dfs(node->right);\n        \n        int leftLength = leftSubtree[1] + 1;\n        int rightLength = rightSubtree[0] + 1;\n        int maxLen = max({leftLength, rightLength, leftSubtree[2], rightSubtree[2]});\n        \n        return {leftLength, rightLength, maxLen};\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}