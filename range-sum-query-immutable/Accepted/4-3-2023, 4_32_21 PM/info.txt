{"id":927154064,"lang":"cpp","lang_name":"C++","time":"9 months, 1 week","timestamp":1680519741,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/927154064/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"16.8 MB","code":"class NumArray { \npublic:\n    vector<int>& preSum; \n    \n    NumArray(vector<int>& nums) : preSum(nums) {\n        for (int i = 1; i < preSum.size(); ++i)\n            preSum[i] += preSum[i-1]; \n    }\n    \n    int sumRange(int left, int right) {\n        if (left == 0) return preSum[right];\n        return preSum[right] - preSum[left-1];\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * int param_1 = obj->sumRange(left,right);\n */","compare_result":"111111111111111","title_slug":"range-sum-query-immutable","has_notes":false,"flag_type":1}