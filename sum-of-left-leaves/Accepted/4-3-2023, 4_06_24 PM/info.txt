{"id":927143564,"lang":"cpp","lang_name":"C++","time":"9 months, 1 week","timestamp":1680518184,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/927143564/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"13.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\nvoid helper (TreeNode* root, int &sum)\n{\n    \n    if (root == NULL)\n    {\n        return ; \n    }\n\n    \n    if ((root -> left != NULL) && (root -> left -> left == NULL && root -> left -> right == NULL))\n    {\n        sum += root -> left -> val ; \n    }\n    helper (root -> left, sum) ; \n    helper (root -> right, sum) ; \n}\n\n    int sumOfLeftLeaves(TreeNode* root) {\n        int sum = 0 ; \n        helper (root, sum) ; \n        return sum ; \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}